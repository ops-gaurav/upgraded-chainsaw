"use strict";function _taggedTemplateLiteral(strings,raw){return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var _templateObject=_taggedTemplateLiteral([""],[""]);!function(){function configurations($stateProvider,$urlRouterProvider,$locationProvider){$stateProvider.state("orders",{url:"/admin/orders",templateUrl:"/javascripts/angular/templates/admin/orders-list-template.html",controller:"OrdersListController"}).state("admin",{url:"/admin",templateUrl:"/javascripts/angular/templates/admin/admin-template-refined.html",controller:"AdminController"}).state("products",{url:"/admin/products",templateUrl:"/javascripts/angular/templates/admin/products-list-template.html",controller:"ProductsListController"}).state("users",{url:"/admin/users",templateUrl:"/javascripts/angular/templates/admin/users-list-template.html",controller:"UsersListController"}).state("categories",{url:"/admin/categories",templateUrl:"/javascripts/angular/templates/admin/categories-list-template.html",controller:"CategoriesListController"}).state("category-new",{url:"/admin/categories/createnew",templateUrl:"/admin/category/new-category-template.html",controller:"NewCategoryController"}).state("product-new",{url:"/admin/product/new",templateUrl:"/admin/products/new-product-template.html",controller:"NewProductController"}),$urlRouterProvider.otherwise("/admin"),$locationProvider.html5Mode({enabled:!0,requireBase:!1})}angular.module("admin",["ui.router","ngFileUpload","ngMask"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",configurations])}(),function(){function ordersListController($scope,$rootScope,$http,$log,PaginationService){$scope.orders=[],$scope.rawData=[],$scope.auxData=[],$scope.sortFactor="Default";var sortMap={1:"Price: Low to high",2:"Price: High to low",3:"Date: Old first",4:"Date: New first",5:"Username"};$scope.fetchPage=function(page){$scope.pages=PaginationService.getPage($scope.auxData.length,5,page),$scope.orders=$scope.auxData.slice($scope.pages.startIndex,$scope.pages.endIndex)},$http.get("/order/multiPopulate").then(function(data){var response=data.data.message;$scope.orders=response,$scope.rawData=$scope.orders,$scope.auxData=$scope.rawData,$scope.fetchPage(1)},function(data){$log.log("ERROR: "+JSON.stringify(data))}),$scope.sortData=function(id){switch($scope.sortFactor=sortMap[id],id){case 1:$scope.auxData.sort(function(a,b){return a._product.price-b._product.price});break;case 2:$scope.auxData.sort(function(a,b){return b._product.price-a._product.price});break;case 3:$scope.auxData.sort(function(a,b){return a.time-b.time});break;case 4:$scope.auxData.sort(function(a,b){return b.time-a.time});break;default:$scope.auxData=$scope.rawData}$scope.fetchPage(1)},$scope.title="All Orders",$scope.parseDate=function(timestamp){return new Date(timestamp)},$scope.filterDate=function(){if($scope.date_from&&$scope.date_to){var startDate=$scope.date_from,endDate=$scope.date_to;$scope.auxData=[],$.each($scope.rawData,function(index,order){var orderDate=new Date(order.time);orderDate>=startDate&&orderDate<=endDate&&$scope.auxData.push(order)}),$scope.fetchPage(1)}}}function usersListController($scope,$rootScope,$http,$log,PaginationService){$scope.title="All users",$scope.selectedUser="All",$scope.users=[],$scope.rawData=[],$scope.auxData=[],$scope.fetchPage=function(page){$scope.pages=PaginationService.getPage($scope.auxData.length,5,page),$scope.users=$scope.auxData.slice($scope.pages.startIndex,$scope.pages.endIndex)},$scope.fetchUsers=function(){$log.log("fetching users"),$http.get("/user/all").then(function(data){"success"==data.data.status?($scope.users=data.data.message,$scope.rawData=$scope.users,$scope.auxData=$scope.rawData,$scope.fetchPage(1)):$log.log(data.data.message)},function(data){$log.error(JSON.stringify(data))})},$scope.fetchUsers(),$scope.filterUser=function(userType){if($scope.selectedUser=userType,"All"==userType)$scope.auxData=$scope.rawData;else{for(var _alias=[],i=0;i<$scope.rawData.length;i++){var p=$scope.rawData[i];p.type==userType&&_alias.push(p)}$scope.auxData=_alias}$scope.fetchPage(1)},$scope.showNewUserModal=function(){$("#new-user-modal").modal({backdrop:"static",keyboard:!1})},$scope.createUser=function(){$http.post("/user/signup",{username:$scope.nUsername,password:$scope.nPassword,phone:$scope.nPhone,email:$scope.nEmail,type:$scope.nType}).then(function(d){"success"==d.data.status?($scope.users.push(d.data.raw),$("#new-user-modal").modal("hide")):$log.log(d.data.message)},function(d){$log.error(JSON.stringify(d))})},$scope.editUser=function(user){$scope.edit=user,$scope.edit&&$("#edit-user-modal").modal({backdrop:"static",keyboard:!1})},$scope.closeEditModal=function(){$scope.edit={},$("#edit-user-modal").modal("hide")},$scope.usernameLookup=function(){$scope.editCheckUsername=!0,$scope.edit?$scope.edit.username&&""!=$scope.edit.username?$http.get("/user/usernameLookup/"+$scope.edit.username).then(function(d){"success"==d.data.status?($scope.editUSuccess=!1,$scope.editUFailure=!0,$scope.editCheckUsername=!1):($scope.editUSuccess=!0,$scope.editUFailure=!1,$scope.editCheckUsername=!1)},function(d){$log.error(JSON.stringify(d))}):($scope.editForm.editUsername.$setValidity("",!1),$scope.editUSucess=!1):$scope.nUsername&&""!=$scope.nUsername?$http.get("/user/usernameLookup/"+$scope.nUsername).then(function(d){"success"==d.data.status?($scope.editUSuccess=!1,$scope.editUFailure=!0,$scope.editCheckUsername=!1):($scope.editUSuccess=!0,$scope.editUFailure=!1,$scope.editCheckUsername=!1)},function(d){$log.error(JSON.stringify(d))}):($scope.newUserForm.nUsername.$setValidity("",!1),$scope.editUSucess=!1,$scope.editCheckUsername=!1)},$scope.updateUser=function(edit){var reqData={_id:edit._id,username:edit.username,email:edit.email,phone:edit.phone,password:edit.password,type:edit.type};$http.put("/user/update/"+edit._id,reqData).then(function(d){"success"==d.data.status?$log.log(d.data.data+" updated"):$log.error(d.data.message),$scope.closeEditModal()},function(d){$log.error(JSON.stringify(d)),$scope.closeEditModal()})},$scope.deleteConfirmation=function(user){$scope.delUser=user,$("#delete-user-modal").modal({backdrop:"static",keyboard:!1})},$scope.hideDelConfirmation=function(){$("#delete-user-modal").modal("hide")},$scope.deleteUser=function(delUser){alert("delete user "+delUser._id),$http.delete("/user/delete\t/"+delUser._id).then(function(d){if("success"==d.data.status){$log.log("deleted user "+delUser.username);for(var i=0;i<$scope.users.length;i++)if($scope.users[i]._id==delUser._id){$scope.users.splice(i,1),$scope.rawData.splice(i,1);break}$scope.users.splice()}else $log.error(d.data.message);$scope.hideDelConfirmation()},function(d){$log.error(JSON.stringify(d)),$scope.hideDelConfirmation()})}}function productsListController($scope,$rootScope,$http,$log,Upload,PaginationService){function showEditModal(){$("#edit-product-modal").modal({backdrop:"static",keyboard:!1})}function hideEditModal(){$("#edit-product-modal").modal("hide")}function showDeleteModal(){$("#delete-product-modal").modal({backdrop:"static",keyboard:!1})}function hideDeleteModal(){$("#delete-product-modal").modal("hide")}$scope.title="All products",$scope.productCategories=[],$http.get("/category/all").then(function(d){if("success"==d.data.status){d.data.message.forEach(function(item){return $scope.productCategories.push(item.name)})}else $scope.productCategories.push("Accessory")},function(d){}),$scope.selectedCategory="All",$scope.rawData=[],$scope.products=[],$scope.newProductModal=function(){$("#new-product-modal").modal({backdrop:"static",keyboard:!1})},$scope.setCategory=function(category){$scope.selectedCategory=category},$scope.fetchPage=function(page){$scope.pages=PaginationService.getPage($scope.rawData.length,5,page),$scope.products=$scope.rawData.slice($scope.pages.startIndex,$scope.pages.endIndex)},$scope.fetchProducts=function(){$log.log("fetching products"),$http.get("/product/all").then(function(d){"success"==d.data.status?($scope.rawData=d.data.message,$scope.products=$scope.rawData,$scope.fetchPage(1)):$log.log(d.data.message)},function(d){500==d.status?$log.error("Server error"):$log.error(JSON.stringify(d))})},$scope.fetchProducts(),$scope.fetchCategory=function(category){if($scope.selectedCategory=category,"Accessory"==category)$scope.selectedCategory="All";else{for(var _productsAlias=[],i=0;i<$scope.rawData.length;i++){var p=$scope.rawData[i];p.category==category&&_productsAlias.push({_id:p._id,category:p.category,image:p.image,name:p.name,price:p.price})}$scope.products=[],$scope.products=_productsAlias}},$scope.setImage=function(file,errFiles,id){$scope.file={},$scope.file[id]=file;var url="/product/addImage/"+id;Upload.upload({url:url,method:"PUT",data:{avatar:file}}).then(function(d){if("success"==d.data.status){var image=d.data.data.image,nUrl="http://localhost:3000/product/image/"+image.value+"/"+image.mime;$log.log(nUrl),$("."+id).attr("src",nUrl)}else $log.log(d.data.message)},function(d){$log.error(JSON.stringify(d))})},$scope.createProduct=function(){$http.post("/product/add",{name:$scope.pName,price:$scope.pPrice,category:$scope.selectedCategory}).then(function(d){"success"==d.data.status?($("#new-product-modal").modal("hide"),$scope.products.push(d.data.raw)):$log.log(d.data.message)},function(data){$log.error("ERROR: "+JSON.stringify(data))})},$scope.editProductDialogue=function(_p){$scope.edit=_p,showEditModal()},$scope.deleteConfirmation=function(product){$scope.edit=product,showDeleteModal()},$scope.editProductRequest=function(){$http.put("/product/update/"+$scope.edit._id,{name:$scope.edit.name,price:$scope.edit.price,category:$scope.edit.category}).then(function(d){"success"==d.data.status?(hideEditModal(),$scope.edit=void 0):$log.error(d.data.message)},function(d){$log.error(JSON.stringify(d))})},$scope.deleteProductRequest=function(){$http.delete("/product/delete/"+$scope.edit._id).then(function(d){if("success"==d.data.status){$log.log("deleted product "+$scope.edit.name);for(var i=0;i<$scope.products.length;i++)if($scope.products[i]._id==$scope.edit._id){$scope.products.splice(i,1),$scope.rawData.splice(i,1);break}}else $log.error(d.data.message(_templateObject));hideDeleteModal()},function(d){$log.error(JSON.stringify(d)),hideDeleteModal()})}}function newProductController($scope,$http,$log,$state){$scope.title="New product",$scope.changeCategory=function(category){$scope.selectedCategory=category},$http.get("/category/all").then(function(d){if("success"==d.data.status){var response=d.data.message;$scope.productCategories=[],response&&response.length>0?response.forEach(function(item){return $scope.productCategories.push(item.name)}):$scope.productCategories.push("Accessory"),$scope.selectedCategory=$scope.productCategories[0]}else $log.error(d.data.message)},function(d){500==d.status?$log.error("Server errr"):$log.error(JSON.stringify(d))}),$scope.createProductRequest=function(){console.log($scope.pName+"\t"+$scope.pPrice+"\t"+$scope.selectedCategory);var payload={name:$scope.pName,price:$scope.pPrice,category:$scope.selectedCategory};$http.post("/product/add",payload).then(function(d){"success"==d.data.status?$state.transitionTo("products"):$log.error(d.data.message)},function(d){500==d.status?$log.error("Server error"):$log.error(JSON.stringify(d))})}}function categoriesListController($scope,$http,$log,$state){function showEditDialogue(){$("#category-edit-modal").modal({backdrop:"static",keyboard:!1})}function hideEditDialogue(){$("#category-edit-modal").modal("hide")}$scope.title="Shopping Categories",$http.get("/category/all").then(function(d){if("success"==d.data.status){var responseData=d.data.message;$scope.categoryBundle=[];for(var i=0;i<responseData.length;i++){for(var categoryRow=[],j=i;j<i+4&&j<responseData.length;j++,i++)categoryRow.push(responseData[j]);$scope.categoryBundle.push(categoryRow)}$log.log($scope.categoryBundle)}else $scope.nodata=!0},function(d){$log.error(JSON.stringify(d))}),$scope.lookupCategoryValidity=function(){$http.get("/category/get/"+$scope.edit.editedName).then(function(d){"success"==d.data.status?$scope.unique=!1:$scope.unique=!0},function(d){$log.error(JSON.stringify(d)),$scope.unique=!1})},$scope.editCategory=function(category){$scope.edit=category,showEditDialogue()},$scope.editCategoryRequest=function(){$http.put("/category/update/"+$scope.edit._id+"/"+$scope.edit.editedName).then(function(d){if("success"==d.data.status){hideEditDialogue();for(var breakWhole=!0,i=0;i<$scope.categoryBundle.length;i++){for(var categoryRow=$scope.categoryBundle[i],j=0;j<categoryRow.length;j++){var current=categoryRow[j];if(current._id==$scope.edit._id){current.name=$scope.edit.editedName,breakWhole=!0;break}categoryRow[j]=current}if($scope.categoryBundle[i]=categoryRow,breakWhole)break}}else $log.error(d.data.message)},function(d){$log.error(JSON.stringify(d))})}}function newCategoryController($scope,$http,$log,$state){$scope.title="Create new shopping category",$scope.lookupCategoryValidity=function(){$http.get("/category/get/"+$scope.category).then(function(d){"success"==d.data.status?$scope.unique=!1:$scope.unique=!0},function(d){$log.error(JSON.stringify(d)),$scope.unique=!1})},$scope.createNewCategory=function(){$http.post("/category/add/"+$scope.category).then(function(d){"success"==d.data.status?$state.transitionTo("categories"):$log.log(d.data.message)},function(d){$log.error(JSON.stringify(d)),$scope.unique=!1})}}function adminController($rootScope,$http,$log,$window,$state){$http.get("/user/sessioninfo").then(function(data){var response=data.data;"success"==response.status?$rootScope.sessionInfo=response.message.doc:$window.location="/"},function(data){$log.error(data)}),$rootScope.logout=function(){$http.get("/user/logout").then(function(){$window.location="/"})},$rootScope.usersCount=function(){$http.get("/user/all").then(function(d){"success"==d.data.status?$rootScope.totalUsers=d.data.message.length:"error"==d.data.status&&($rootScope.totalUsers=0)},function(d){500==d.status?$log.error("Server error"):$log.error(JSON.stringify(d))})},$rootScope.productsCount=function(){$http.get("/product/all").then(function(d){"success"==d.data.status?$rootScope.totalProducts=d.data.message.length:"error"==d.data.status&&($rootScope.totalUsers=0)},function(d){500==d.status?$log.error("Server error"):$log.error(JSON.stringify(d))})},$rootScope.ordersCount=function(){$http.get("/order/all").then(function(d){"success"==d.data.status?$rootScope.totalOrders=d.data.message.length:"error"==d.data.status&&($rootScope.totalUsers=0)},function(d){500==d.status?$log.error("Server error"):$log.error(JSON.stringify(d))})},$rootScope.usersCount(),$rootScope.productsCount(),$rootScope.ordersCount()}angular.module("admin").controller("OrdersListController",["$scope","$rootScope","$http","$log","PaginationService",ordersListController]).controller("UsersListController",["$scope","$rootScope","$http","$log","PaginationService",usersListController]).controller("ProductsListController",["$scope","$rootScope","$http","$log","Upload","PaginationService",productsListController]).controller("NewProductController",["$scope","$http","$log","$state",newProductController]).controller("CategoriesListController",["$scope","$http","$log","$state",categoriesListController]).controller("NewCategoryController",["$scope","$http","$log","$state",newCategoryController]).controller("AdminController",["$rootScope","$http","$log","$window","$state",adminController])}(),function(){function paginationService(){return{getPage:function(totalItems,pageItems,currentPage){pageItems=pageItems||5,currentPage=currentPage||1;var totalPages=Math.ceil(totalItems/pageItems),startIndex=(currentPage-1)*pageItems,endIndex=Math.min(startIndex+pageItems,totalItems),pageIndexes=[];if(currentPage<=3)for(var i=1;i<=6&&!(i>totalPages);i++)pageIndexes.push(i);else if(currentPage==totalPages)for(var i=totalPages-5;i<=totalPages;i++)pageIndexes.push(i);else{for(var i=currentPage-3;i<=currentPage;i++)pageIndexes.push(i);for(var i=currentPage+1;i<=currentPage+2&&!(i>totalPages);i++)pageIndexes.push(i)}return{totalPages:totalPages,currentPage:currentPage,pageItems:pageItems,startIndex:startIndex,endIndex:endIndex,pages:pageIndexes}}}}angular.module("admin").factory("PaginationService",paginationService)}(),function(){function configurations($stateProvider,$urlRouterProvider,$locationProvider){$stateProvider.state("default",{url:"/",templateUrl:"/javascripts/angular/templates/login-template.html",controller:"LoginController"}).state("/signup",{url:"/signup",templateUrl:"/javascripts/angular/templates/register-template.html",controller:"SignupController"}),$urlRouterProvider.otherwise("/"),$locationProvider.html5Mode({enabled:!0,requireBase:!1})}angular.module("app",["ui.router","ngMask"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",configurations])}(),function(){function loginController($scope,$window,$http,$log){$scope.username="gaurav",$scope.password="2202319",$scope._processAuth=function(){$log.log("authenticate"),$scope.username&&$scope.password?$http.post("/user/auth",{username:$scope.username,password:$scope.password}).then(function(data){var response=data.data;"success"==response.status?($window.location=response.message.redirect,$log.log("redirect to "+response.message.redirect)):$log.log(response.message)},function(data){$log.error(data.status),401==data.status?$scope.auth_error="Username or password error":$log.log(JSON.stringify(data))}):$scope.auth_error="Required username and password"}}function signupController($scope,$window,$http){$scope.usernameLookup=function(){$scope.editCheckUsername=!0,$scope.edit?$scope.edit.username&&""!=$scope.edit.username?$http.get("/user/usernameLookup/"+$scope.edit.username).then(function(d){"success"==d.data.status?($scope.editUSuccess=!1,$scope.editUFailure=!0,$scope.editCheckUsername=!1):($scope.editUSuccess=!0,$scope.editUFailure=!1,$scope.editCheckUsername=!1)},function(d){console.error(JSON.stringify(d))}):($scope.editForm.editUsername.$setValidity("",!1),$scope.editUSucess=!1):$scope.nUsername&&""!=$scope.nUsername?$http.get("/user/usernameLookup/"+$scope.nUsername).then(function(d){"success"==d.data.status?($scope.editUSuccess=!1,$scope.editUFailure=!0,$scope.editCheckUsername=!1):($scope.editUSuccess=!0,$scope.editUFailure=!1,$scope.editCheckUsername=!1)},function(d){console.error(JSON.stringify(d))}):($scope.newUserForm.nUsername.$setValidity("",!1),$scope.editUSucess=!1,$scope.editCheckUsername=!1)},$scope.createUser=function(){$http.post("/user/signup",{username:$scope.nUsername,password:$scope.nPassword,phone:$scope.nPhone,email:$scope.nEmail,type:$scope.nType}).then(function(d){"success"==d.data.status?($scope.success="User created sucessfully. redirecting to login",$window.location="/"):console.log(d.data.message)},function(d){console.error(JSON.stringify(d))})}}angular.module("app").controller("LoginController",["$scope","$window","$http","$log",loginController]).controller("SignupController",["$scope","$window","$http",signupController])}(),function(){function configurations($stateProvider,$urlRouterProvider,$locationProvider){$stateProvider.state("user",{url:"/user",views:{"":{templateUrl:"/javascripts/angular/templates/user/user-template.html",controller:"UserController"},"productsListing@user":{templateUrl:"/javascripts/angular/templates/user/products-list-template.html",controller:"ProductsListController"},"ordersListing@user":{templateUrl:"/javascripts/angular/templates/user/orders-list-template.html",controller:"OrdersListController"}}}).state("orders",{url:"/user/orders",templateUrl:"/user/orders-list-template.html",controller:"OrdersListController"}).state("edit",{url:"/user/edit",templateUrl:"/user/edit-user-template.html",controller:"EditUserController"}),$urlRouterProvider.otherwise("/user"),$locationProvider.html5Mode({enabled:!0,requireBase:!1})}angular.module("user",["ui.router","ngFileUpload","ngMask"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",configurations])}(),function(){function productsListController($scope,$rootScope,$http,$log,PaginationService){function showPurchaseSuccess(){$("#purchase-success").modal({backdrop:"static",keyboard:!1})}$scope.pageTitle="We have following products for you to shop today",$scope.productCategories=[],$scope.selectedFilter="All",$scope.rawData=[],$scope.auxData=[],$scope.sortStrategy="Default",$http.get("/category/all").then(function(d){if("success"==d.data.status){d.data.message.forEach(function(item){return $scope.productCategories.push(item.name)})}else $log.info(d.data.message)},function(d){500==d.status?$log.error("Server error"):$log.error(JSON.stringify(d))}),$scope.rawData=[],$scope.fetchPage=function(page){$scope.selectedFilter,$scope.pages=PaginationService.getPage($scope.auxData.length,5,page),$scope.products=$scope.auxData.slice($scope.pages.startIndex,$scope.pages.endIndex)},$scope.fetchProducts=function(){$scope.selectedFilter="All",$http.get("/product/all").then(function(d){"success"==d.data.status?($scope.rawData=d.data.message,$scope.auxData=$scope.rawData,$scope.products=$scope.rawData,$scope.fetchPage(1)):$log.log("response error: "+d.data.message)},function(d){500==d.status?$log.error("server error"):$log.log(JSON.stringify(d))})},$scope.fetchCategory=function(category){$scope.selectedFilter=category;for(var _productsAlias=[],i=0;i<$scope.rawData.length;i++){var p=$scope.rawData[i];p.category==category&&_productsAlias.push({_id:p._id,category:p.category,image:p.image,name:p.name,price:p.price})}$scope.auxData=[],$scope.auxData=_productsAlias,$scope.fetchPage(1)},$scope.fetchProducts(),$scope.buyItem=function(pId){$http.post("/order/add/"+pId).then(function(d){"success"==d.data.status?showPurchaseSuccess():console.log(d.data.message)},function(d){500==d.status?console.error("server error"):console.error(JSON.stringify(d))})},$scope.priceSorting=function(type){switch(console.log(type),type){case 1:$scope.sortStrategy="Price: Low to high",$scope.auxData.sort(function(a,b){return a.price-b.price}),$scope.fetchPage($scope.pages.currentPage);break;case 2:$scope.sortStrategy="Price: High to low",$scope.auxData.sort(function(a,b){return b.price-a.price}),$scope.fetchPage($scope.pages.currentPage);break;default:$scope.sortStrategy="Default",$scope.orders=$scope.rawData}}}function ordersListController($scope,$rootScope,$http,PaginationService){function defaultSortItems(){$scope.rawData.sort(function(a,b){return b.time-a.time})}$scope.pageTitle="Your recent orders",$scope.rawData=[],$scope.auxData=[],$scope.sortFactor="Default";var sortMap={1:"Price: Low to high",2:"Price: High to low",3:"Date: Old first",4:"Date: New first",5:"Username"};$scope.fetchPage=function(page){$scope.pages=PaginationService.getPage($scope.rawData.length,5,page),$scope.orders=$scope.auxData.slice($scope.pages.startIndex,$scope.pages.endIndex)},$scope.fetchOrders=function(){$http.get("/order/myorders").then(function(data){"success"==data.data.status?($scope.orders=data.data.message,$scope.rawData=$scope.orders,$scope.auxData=$scope.rawData,defaultSortItems(),$scope.fetchPage(1)):console.log(data.data.message)},function(data){console.log(JSON.stringify(data))})},$scope.parseDate=function(millis){return new Date(millis)},$scope.sortData=function(id){switch($scope.sortFactor=sortMap[id],id){case 1:$scope.auxData.sort(function(a,b){return a._product.price-b._product.price});break;case 2:$scope.auxData.sort(function(a,b){return b._product.price-a._product.price});break;case 3:$scope.auxData.sort(function(a,b){return a.time-b.time});break;case 4:$scope.auxData.sort(function(a,b){return b.time-a.time});break;default:$scope.auxData=$scope.rawData}$scope.filterDate=function(){if($scope.date_from&&$scope.date_to){var startDate=$scope.date_from,endDate=$scope.date_to;$scope.auxData=[],$.each($scope.rawData,function(index,order){var orderDate=new Date(order.time);orderDate>=startDate&&orderDate<=endDate&&($scope.auxData.push(order),console.log("push"))}),$scope.fetchPage(1)}},$scope.fetchPage(1)},$scope.fetchOrders()}function editUserController($scope,$rootScope,$http,$log,$state,Upload,$window){$scope.title="Edit user information",$scope.editUserRequest=function(){var payload={username:$rootScope.sessionInfo.username,password:$rootScope.sessionInfo.password,phone:$scope.edit.phone,email:$scope.edit.email,type:$rootScope.sessionInfo.type};$http.put("/user/update/"+$rootScope.sessionInfo._id,payload).then(function(d){"success"==d.data.status?($log.info("Updated information"),$rootScope.fetchSessionInfo(),$state.transitionTo("user")):$log.info(d.data.message)},function(d){500==d.status?$log.error("server error"):$log.error(JSON.stringify(d))})},$scope.lookupPassword=function(){$scope.change.oldPass==$rootScope.sessionInfo.password?$scope.changePasswordForm.oPass.$setValidity("",!0):$scope.changePasswordForm.oPass.$setValidity("",!1)},$scope.updatePasswordRequest=function(){var payload={username:$rootScope.sessionInfo.username,password:$scope.change.newPass,email:$rootScope.sessionInfo.email,phone:$rootScope.sessionInfo.phone,type:$rootScope.sessionInfo.type,image:$rootScope.sessionInfo.image};$http.put("/user/update/"+$rootScope.sessionInfo._id,payload).then(function(d){"success"==d.data.status?$window.location="/":$log.log(d.data.message)},function(d){500==d.status?$log.error("server error"):$log.error(JSON.stringify(d))})}}function userController($scope,$rootScope,$http,$log,$window,Upload){function showEditModal(){$("#edit-user-modal").modal({backdrop:"static",keyboard:!1})}function closeEditModal(){$("#edit-user-modal").modal("hide")}$rootScope.fetchSessionInfo=function(){$http.get("/user/sessionInfo").then(function(d){"success"==d.data.status?d.data.message.doc?$rootScope.sessionInfo=d.data.message.doc:$rootScope.sessionInfo=d.data.message:$window.location="/"},function(d){$log.log("ERROR: "+d)})},$rootScope.fetchSessionInfo(),$rootScope.logout=function(){$http.get("/user/logout").then(function(){$window.location="/"})},$rootScope.setImage=function(file,errFiles,id){if(file){$scope.file={},$scope.file[id]=file;var url="/user/addImage/"+id;Upload.upload({url:url,method:"PUT",data:{avatar:file}}).then(function(d){if("success"==d.data.status){var image=d.data.data.image;image.value,image.mime;$window.location="/user"}else console.error(d.data.message)},function(d){console.error(JSON.stringify(d))})}},$rootScope.showEditDialogue=function(){showEditModal()},$rootScope.updateUserRequest=function(){var edit=$rootScope.edit;console.log(edit);var reqData={_id:$rootScope.sessionInfo._id,username:$rootScope.sessionInfo.username,email:edit.email,phone:edit.phone,password:$rootScope.sessionInfo.password,type:"user"};$http.put("/user/update/"+$rootScope.sessionInfo._id,reqData).then(function(d){"success"==d.data.status?console.log(d.data.data+" updated"):console.error(d.data.message),closeEditModal()},function(d){console.error(JSON.stringify(d)),closeEditModal()})}}angular.module("user").controller("ProductsListController",["$scope","$rootScope","$http","$log","PaginationService",productsListController]).controller("OrdersListController",["$scope","$rootScope","$http","PaginationService",ordersListController]).controller("EditUserController",["$scope","$rootScope","$http","$log","$state","Upload","$window",editUserController]).controller("UserController",["$scope","$rootScope","$http","$log","$window","Upload",userController])}(),function(){function paginationService(){return{getPage:function(totalItems,pageItems,currentPage){pageItems=pageItems||5,currentPage=currentPage||1;var totalPages=Math.ceil(totalItems/pageItems),startIndex=(currentPage-1)*pageItems,endIndex=Math.min(startIndex+pageItems,totalItems),pageIndexes=[];if(currentPage<=3)for(var i=1;i<=6&&!(i>totalPages);i++)pageIndexes.push(i);else if(currentPage==totalPages)for(var i=totalPages-5;i<=totalPages;i++)pageIndexes.push(i);else{for(var i=currentPage-3;i<=currentPage;i++)pageIndexes.push(i);for(var i=currentPage+1;i<=currentPage+2&&!(i>totalPages);i++)pageIndexes.push(i)}return{totalPages:totalPages,currentPage:currentPage,pageItems:pageItems,startIndex:startIndex,endIndex:endIndex,pages:pageIndexes}}}}angular.module("user").factory("PaginationService",paginationService)}();